import webbrowser

from fyers_api import accessToken


class GetPass(object):
    def __init__(self, auth_token=None) -> None:
        self.response_type = "code"
        self.secret_key = "ZKQJQVD78P"
        self.app_id = "LSCTXIM2YP-100"
        self.grant_type = "authorization_code"
        self.redirect_url = "https://www.fasterthanlight.in/"
        self.auth_token = auth_token

    def get_auth_token(self):
        """
        :param app_id: "XXXXXXXXXXX"
        :param redirect_url: "https://XXXXXX.com"
        1. This function open this url in the browser.
        2. This will ask you to login and will ask you to approve the app if 
        it is not approved already.
        3. Once that is done, it will redirect to a url 
        (added while app creation) with the auth_token. The url will look like
            https://www.fasterthanlight.in/?auth_token=eyJ0eXAiOiXXXXXG&user_id=DP00404
        4. You have to take the auth_token from the url and use that token 
        in your generate_access_token function.
        """

        # creating an instance app_session to generate the auth code by
        # passing app id and redirect url as parameter
        app_session = accessToken.SessionModel(
            client_id=self.app_id, redirect_uri=self.redirect_url,
            response_type=self.response_type, grant_type=self.grant_type,
            state="state", scope="", nonce="")

        # The variable `token_url` will have a url like
        # https://uat-api.fyers.in/api/dev/generate-authcode?\
        # app_id=B8PXXXH8T6&redirectUrl=https%3A%2F%2Fgoogle.com
        token_url = app_session.generate_authcode()
        print(f"Token url: {token_url}")
        # This command is used to open the url in default system brower
        webbrowser.open(token_url, new=1)
        return True, "URL opened in the browser"

    def generate_access_token(self):
        """
        :param auth_token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.ey
        JleHAiOjE1OTM1ODY2NzEsInN"
        :param app_id: "B8PXXXXXXX"
        :param secret_key: "XXXXXXKGN0"
        :param redirect_url: "https://XXXXXX.com"
        :return: access_token: "eyJ0eXAiOiJKV1QiLCXXXX1NiJ9.eyJp
        YXXXXXXXXXXMsIm5iZiI6MTU5MzU4ODM3MywiZXhwIjoxNTkzNj"

        1.this function takes the param and return the access_token
        2.the access_token created will be used further .(in fyersModel)]
        3. one can get the auth_token from the url generated by getauthToken
        function (from auth_token= ..... &user_Id=xxxxxx before &)
        """

        # creating an instance app_session by passing app id,secret key and
        #  redirect url as parameter
        app_session = accessToken.SessionModel(
            client_id=self.app_id, secret_key=self.secret_key,
            grant_type="authorization_code")

        # we need to pass the auth code in set_token method
        app_session.set_token(self.auth_token)
        # generate_token function will return us the access token and we
        #  store in variable "access_token"
        access_token = app_session.generate_token()
        return True, access_token

    def call(self):
        "check if auth token is generated if not create one and exit"
        if not self.auth_token:
            "generate auth token"
            return self.get_auth_token()
        # if auth token is generated create api token
        print(self.generate_access_token())


def main():
    auth_token = None
    auth_token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGkubG9naW4uZnllcnMuaW4iLCJpYXQiOjE2NTUxODk3MDMsImV4cCI6MTY1NTIxOTcwMywibmJmIjoxNjU1MTg5MTAzLCJhdWQiOiJbXCJ4OjBcIiwgXCJ4OjFcIiwgXCJ4OjJcIiwgXCJkOjFcIiwgXCJkOjJcIiwgXCJ4OjFcIiwgXCJ4OjBcIl0iLCJzdWIiOiJhdXRoX2NvZGUiLCJkaXNwbGF5X25hbWUiOiJYQTAwMjk4Iiwibm9uY2UiOiIiLCJhcHBfaWQiOiJMU0NUWElNMllQIiwidXVpZCI6IjZhYjRlZjRjN2JjMzRjY2ZhZjdhNTM0NzBlY2I2NjgzIiwiaXBBZGRyIjoiMC4wLjAuMCIsInNjb3BlIjoiIn0.tvN9BEINdzTCVvPMiy3nxs7Y_wrDkj5sRBfoYu39sh4"
    client = GetPass(auth_token)
    client.call()


if __name__ == '__main__':
    main()
